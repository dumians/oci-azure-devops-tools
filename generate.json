[
    {
        "taskName": "OCICLI",
        "additionalSetupStatements": ["process.env.OCI_EXECUTION_ENV = 'VSTS-OCICLI'"]
    },
    {
        "taskName": "OCIShellScript",
        "additionalSetupStatements": ["process.env.OCI_EXECUTION_ENV = 'VSTS-OCIShellScript'"],
        "successResult": "tl.loc('BashReturnCode', result)",
        "returnType": "number"
    },
    {
        "taskName": "CodeDeployDeployApplication",
        "taskClients": ["CodeDeploy", "BlockStorage"]
    },
    {
        "taskName": "CloudFormationCreateOrUpdateStack",
        "taskClients": ["CloudFormation", "BlockStorage"]
    },
    {
        "taskName": "CloudFormationDeleteStack",
        "taskClients": ["CloudFormation"]
    },
    {
        "taskName": "CloudFormationExecuteChangeSet",
        "taskClients": ["CloudFormation"]
    },
    {
        "taskName": "OKEPullImage",
        "taskClients": ["OKE"],
        "additionalImports": ["import { locateDockerExecutable, runDockerCommand } from 'Common/dockerUtils'"],
        "additionalArguments": [
            "{ runDockerCommand: runDockerCommand, locateDockerExecutable: locateDockerExecutable }"
        ]
    },
    {
        "taskName": "OKEPushImage",
        "taskClients": ["OKE"],
        "additionalImports": ["import { locateDockerExecutable, runDockerCommand } from 'Common/dockerUtils'"],
        "additionalArguments": [
            "{ runDockerCommand: runDockerCommand, locateDockerExecutable: locateDockerExecutable }"
        ]
    },
    {
        "taskName": "FunctionDeployFunction",
        "taskClients": ["IAM", "Function"]
    },
    {
        "taskName": "FunctionInvokeFunction",
        "taskClients": ["Function"]
    },
    {
        "taskName": "FunctionNETCoreDeploy",
        "additionalImports": ["import { getCredentials } from 'Common/OCIConnectionParameters'"],
        "additionalSetupStatements": ["process.env.OCI_EXECUTION_ENV = 'VSTS-LambdaNETCoreDeploy'"],
        "additionalArguments": [
            "await getCredentials(taskParameters.OCIConnectionParameters)",
            "tl.which('dotnet', true)",
            "'dotnet-Function'"
        ]
    },
    {
        "taskName": "S3Download",
        "taskClients": ["BlockStorage"]
    },
    {
        "taskName": "S3Upload",
        "additionalImports": ["import { getRegion } from 'Common/OCIConnectionParameters'"],
        "additionalArguments": ["await getRegion()"],
        "taskClients": ["BlockStorage"]
    },
    {
        "taskName": "SecretsManagerCreateOrUpdateSecret",
        "taskClients": ["SecretsManager"]
    },
    {
        "taskName": "SecretsManagerGetSecret",
        "taskClients": ["SecretsManager"]
    },

    {
        "taskName": "SystemsManagerGetParameter",
        "taskClients": ["SSM"]
    },
    {
        "taskName": "SystemsManagerRunCommand",
        "taskClients": ["SSM"]
    },
    {
        "taskName": "SystemsManagerSetParameter",
        "taskClients": ["SSM"]
    }
]
